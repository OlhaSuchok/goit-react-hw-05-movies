{"version":3,"file":"static/js/115.5093df02.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","pages/Cast/Cast.styled.js","services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCasts } from 'services/Api';\nimport {\n  CastList,\n  CastText,\n  CastValue,\n  CastName,\n  CastImg,\n  CastTextWrapper,\n  CastItem,\n  AccentText,\n} from './Cast.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  // eslint-disable-next-line\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const getFilmDetails = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await fetchCasts(movieId);\n        setStatus(Status.RESOLVED);\n        setCast(cast);\n      } catch {\n        setStatus(Status.REJECTED);\n        setError(console.log(error));\n      }\n    };\n    getFilmDetails();\n  }, [error, movieId]);\n\n  return (\n    <div>\n      {cast && (\n        <CastList>\n          {cast.map(({ profile_path, id, character, name, original_name }) => {\n            return (\n              <CastItem key={id}>\n                {profile_path && (\n                  <CastImg src={imageUrl + profile_path} alt={name}></CastImg>\n                )}\n                <CastTextWrapper>\n                  <CastText>\n                    <CastName>Name: </CastName>\n                    <CastValue>{original_name}</CastValue>\n                  </CastText>\n                  <CastText>\n                    <CastName>Ð¡haracter: </CastName>\n                    <CastValue>{character}</CastValue>\n                  </CastText>\n                </CastTextWrapper>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n      {cast.length === 0 &&\n        status !== Status.IDLE &&\n        status !== Status.PENDING && (\n          <AccentText>We don't have any casts for this movie.</AccentText>\n        )}\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const CastTextWrapper = styled.div``;\n\nexport const CastItem = styled.li`\n  padding: 20px;\n  margin-bottom: 20px;\n  background-color: ${props => props.theme.colors.backgroundSection};\n  border-radius: 1px solid #2a2a2a;\n\n  border-radius: 3px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -4px,\n    rgb(0 0 0 / 14%) 0px 4px 5px 0px;\n`;\n\nexport const CastImg = styled.img`\n  max-width: 300px;\n  margin-bottom: 8px;\n`;\n\nexport const CastText = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n`;\n\nexport const CastName = styled.span`\n  color: #2a2a2a;\n  font-family: none;\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport const CastValue = styled.span`\n  color: #2a2a2a;\n  font-family: none;\n  font-size: 24px;\n  font-weight: 400;\n`;\n\nexport const AccentText = styled.p`\n  text-align: center;\n  color: #2a2a2a;\n  font-family: none;\n  font-size: 24px;\n  font-weight: 500;\n\n  margin-top: 40px;\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '21dd3197032ef657b681b90da4af9cac';\n\nexport const fetchListPopularFilms = async () => {\n  const ENDPOINT = '/trending/movie/week';\n  const url = `${BASE_URL}/3${ENDPOINT}?api_key=${API_KEY}`;\n\n  const data = await axios.get(url);\n  return data;\n};\n\nexport const fetchSearchFilms = async query => {\n  const ENDPOINT = '/search/movie';\n  const url = `${BASE_URL}/3${ENDPOINT}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  const data = await axios.get(url);\n  return data;\n};\n\nexport const fetchFilmById = async id => {\n  const ENDPOINT = '/movie';\n  const url = `${BASE_URL}3${ENDPOINT}/${id}?api_key=${API_KEY}&language=en-US`;\n\n  const data = await axios.get(url);\n  return data;\n};\n\nexport const fetchCasts = async id => {\n  const ENDPOINT = '/movie';\n  const url = `${BASE_URL}3${ENDPOINT}/${id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const data = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const ENDPOINT = '/movie';\n  const url = `${BASE_URL}3${ENDPOINT}/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n\n  const data = await axios.get(url);\n  return data;\n};\n"],"names":["Status","Cast","useState","cast","setCast","status","setStatus","error","setError","movieId","useParams","useEffect","getFilmDetails","fetchCasts","data","console","log","map","profile_path","id","character","name","original_name","src","alt","length","CastList","styled","CastTextWrapper","CastItem","props","theme","colors","backgroundSection","CastImg","CastText","CastName","CastValue","AccentText","BASE_URL","API_KEY","fetchListPopularFilms","url","axios","fetchSearchFilms","query","fetchFilmById","fetchReviews"],"sourceRoot":""}